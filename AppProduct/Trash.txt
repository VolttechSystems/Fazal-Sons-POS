

# @api_view(['GET', 'POST'])
# def AddBrandView(request):
#     if request.method == "GET":
#         brand = Brand.objects.all()
#         if len(brand) > 0:
#             serializer = BrandSerializer(brand, many=True)
#             param = {
#                 'status': 200,
#                 'data': serializer.data,
#             }
#             return Response(param)
#         raise Http404
#     elif request.method == 'POST':
#         serializer = BrandSerializer(data=request.data)
#         if serializer.is_valid():
#             serializer.save()
#             return Response(serializer.data)
#         return Response(serializer.errors)


# @api_view(['GET', 'PUT', 'DELETE'])
# def BrandGetView(request, id):
#     brand = Brand.objects.get(id=id)
#
#     if request.method == "GET":
#         brand_serializer = BrandSerializer(brand)
#         return Response(brand_serializer.data)
#     elif request.method == "DELETE":
#         brand.delete()
#         return Response("Deleted")
#     elif request.method == "PUT":
#         brand_serializer = BrandSerializer(brand, data=request.data)
#         if brand_serializer.is_valid():
#             brand_serializer.save()
#             return Response(brand_serializer.data, status=200)
#     return Response("Error! Nothing Happened")


@api_view(['GET', 'POST'])
def AddAttributeView(request):
    if request.method == "GET":
        attribute = Attribute.objects.all()
        if len(attribute) > 0:
            serializer = AttributeSerializer(attribute, many=True)
            param = {
                'status': 200,
                'data': serializer.data,
            }
            return Response(param)
        raise Http404
    elif request.method == 'POST':
        serializer = AttributeSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors)


@api_view(['GET', 'PUT', 'DELETE'])
def AttributeGetView(request, id):
    attribute = Attribute.objects.get(id=id)

    if request.method == "GET":
        attribute_serializer = AttributeSerializer(attribute)
        return Response(attribute_serializer.data)
    elif request.method == "DELETE":
        attribute.delete()
        return Response("Deleted")
    elif request.method == "PUT":
        attribute_serializer = AttributeSerializer(attribute, data=request.data)
        if attribute_serializer.is_valid():
            attribute_serializer.save()
            return Response(attribute_serializer.data, status=200)
    return Response("Error! Nothing Happened")


@api_view(['GET', 'POST'])
def AddVariationView(request):
    if request.method == "GET":
        variation = Variation.objects.all()
        if len(variation) > 0:
            serializer = VariationSerializer(variation, many=True)
            param = {
                'status': 200,
                'data': serializer.data,
            }
            return Response(param)
        raise Http404
    elif request.method == 'POST':
        serializer = VariationSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors)


@api_view(['GET', 'PUT', 'DELETE'])
def VariationGetView(request, id):
    variation = Variation.objects.get(id=id)
    if request.method == "GET":
        variation_serialzer = VariationSerializer(variation)
        return Response(variation_serialzer.data)
    elif request.method == "DELETE":
        variation.delete()
        return Response("Deleted")
    elif request.method == "PUT":
        variation_serialzer = VariationSerializer(variation, data=request.data)
        if variation_serialzer.is_valid():
            variation_serialzer.save()
            return Response(variation_serialzer.data, status=200)
    return Response("Error! Nothing Happened")


@api_view(['GET', 'POST'])
def AddParentCategoryView(request):
    if request.method == "GET":
        parent_category = ParentCategory.objects.all()
        if len(parent_category) > 0:
            pc_serializer = ParentCategorySerializer(parent_category, many=True)
            param = {
                'status': 200,
                'data': pc_serializer.data,
            }
            return Response(param)
        raise Http404
    elif request.method == "POST":
        pc_serializer = ParentCategorySerializer(data=request.data)
        if pc_serializer.is_valid():
            pc_serializer.save()
            return Response(pc_serializer.data)
        return Response(pc_serializer.errors)


@api_view(['GET', 'PUT', 'DELETE'])
def ParentCategoryGetView(request, id):
    p_category = ParentCategory.objects.get(id=id)

    if request.method == 'GET':
        pc_serializer = ParentCategorySerializer(p_category)
        return Response(pc_serializer.data)
    elif request.method == 'DELETE':
        p_category.delete()
        return Response("Deleted")
    elif request.method == 'PUT':
        pc_serializer = ParentCategorySerializer(p_category, data=request.data)
        if pc_serializer.is_valid():
            pc_serializer.save()
            return Response(pc_serializer.data)
    return Response("Error! Nothing Happened")


@api_view(['GET', 'POST'])
def AddCategoryView(request):
    if request.method == "GET":
        category = Category.objects.all()
        if len(category) > 0:
            category_serializer = CategorySerializer(category, many=True)
            param = {
                'status': 200,
                'data': category_serializer.data,
            }
            return Response(param)
        raise Http404
    elif request.method == "POST":
        category_serializer = CategorySerializer(data=request.data)
        if category_serializer.is_valid():
            category_serializer.save()
            return Response(category_serializer.data)
        return Response(category_serializer.errors)



@api_view(['GET', 'PUT', 'DELETE'])
def CategoryGetView(request, id):
    category = Category.objects.get(id=id)

    if request.method == 'GET':
        category_serializer = CategorySerializer(category)
        return Response(category_serializer.data)
    elif request.method == 'DELETE':
        category.delete()
        return Response("Deleted")
    elif request.method == 'PUT':
        category_serializer = CategorySerializer(category, data=request.data)
        if category_serializer.is_valid():
            category_serializer.save()
            return Response(category_serializer.data)
    return Response("Error! Nothing Happened")



